name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc g++ mold libzstd-dev

      - name: Set Up Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.84.1
          components: clippy
          cache: false
          rustflags: "-D warnings"

      - name: Cargo Check
        run: cargo check

  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc g++ mold libzstd-dev

      - name: Set Up Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.84.1
          components: clippy
          cache: false
          rustflags: "-D warnings"

      - name: Cargo Test
        run: cargo test --all-features

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Rust Toolchain with Rustfmt
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.84.1
          components: rustfmt
          cache: false
          rustflags: "-D warnings"

      - name: Cargo Format Check
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc g++ mold libzstd-dev

      - name: Set Up Rust Toolchain with Clippy
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.84.1
          components: clippy
          cache: false
          rustflags: "-D warnings"

      - name: Cargo Clippy
        run: cargo clippy -- -D warnings

  build_release:
    name: Build Release
    runs-on: ${{ matrix.os }}
    needs: [check, test, fmt, clippy]
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - os: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu

          - os: windows-latest
            target: x86_64-pc-windows-msvc

          - os: macos-latest
            target: aarch64-apple-darwin

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          components: clippy
          cache: false
          rustflags: ${{ matrix.rustflags }}

      - name: Install System Dependencies (Linux x86_64)
        if: matrix.os == 'ubuntu-latest' && matrix.target == 'x86_64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc g++ mold libzstd-dev

      - name: Install System Dependencies (Linux aarch64)
        if: matrix.os == 'ubuntu-24.04-arm' && matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc g++ mold libzstd-dev

      - name: Install System Dependencies (macOS aarch64)
        if: matrix.os == 'macos-latest' && matrix.target == 'aarch64-apple-darwin'
        run: |
          brew update
          brew install gcc zstd

      - name: Install System Dependencies (Windows x86_64)
        if: matrix.os == 'windows-latest' && matrix.target == 'x86_64-pc-windows-msvc'
        run: |
          choco install zstandard -y

      - name: Build Release
        run: cargo build --release --target ${{ matrix.target }}
